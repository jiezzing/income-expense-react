{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sun-asterisk/Projects/Jan-June (2021)/expense-tracker-react/client/src/context/GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react';\nimport { useAlert } from 'react-alert';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; // Initial State\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; // Create Context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); // Provider Component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const alert = useAlert();\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (err) {\n      alert.error(err.response.data.error);\n\n      if (err.response.data.error === \"Please add some text\") {\n        alert.error(err.response.data.error);\n      } else if (err.response.data.error === \"Please add a positive or negative number\") {\n        alert.error(err.response.data.error);\n      } else {\n        dispatch({\n          type: 'TRANSACTION_ERROR',\n          payload: err.response.data.error\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 13\n  }, this);\n};\n\n_s(GlobalProvider, \"SWRf2Xg/mikcizuucDVd6PqzF7w=\", false, function () {\n  return [useAlert];\n});\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/home/sun-asterisk/Projects/Jan-June (2021)/expense-tracker-react/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useAlert","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","alert","state","dispatch","getTransactions","res","get","type","payload","data","err","response","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport { useAlert } from 'react-alert';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n// Initial State\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true\n}\n\n// Create Context\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const GlobalProvider = ({ children }) => {\n    const alert = useAlert();\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // Actions\n    async function getTransactions() {\n        try {\n            const res = await axios.get('/api/v1/transactions');\n\n            dispatch({\n                type: 'GET_TRANSACTIONS',\n                payload: res.data.data\n            });\n        } catch (err) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: err.response.data.error\n            });\n        }\n    }\n\n    async function deleteTransaction(id) {\n        try {\n            await axios.delete(`/api/v1/transactions/${id}`);\n\n            dispatch({\n                type: 'DELETE_TRANSACTION',\n                payload: id\n            });\n        } catch (err) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: err.response.data.error\n            });\n        }\n    }\n\n    async function addTransaction(transaction) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.post('/api/v1/transactions', transaction, config);\n\n            dispatch({\n                type: 'ADD_TRANSACTION',\n                payload: res.data.data\n            });\n        } catch (err) {\n            alert.error(err.response.data.error);\n            if (err.response.data.error === \"Please add some text\") {\n                alert.error(err.response.data.error);\n            }\n            else if (err.response.data.error === \"Please add a positive or negative number\") {\n                alert.error(err.response.data.error);\n            }\n            else {\n                dispatch({\n                    type: 'TRANSACTION_ERROR',\n                    payload: err.response.data.error\n                });\n            }\n        }\n    }\n\n    return (<GlobalContext.Provider value={{\n        transactions: state.transactions,\n        error: state.error,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction\n    }}>\n        {children}\n    </GlobalContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}