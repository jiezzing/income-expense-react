{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sun-asterisk/Projects/Jan-June (2021)/expense-tracker-react/client/src/components/AddTransaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { useAlert } from 'react-alert';\nimport { GlobalContext } from '../context/GlobalState';\nimport { Message } from '../Message';\nexport const AddTransaction = () => {\n  _s();\n\n  const alert = useAlert();\n  const {\n    addTransaction,\n    transactions\n  } = useContext(GlobalContext);\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  function isTextExist(transactions) {\n    let textExist = false;\n\n    if (transactions.length > 0) {\n      transactions.map(transaction => {\n        if (transaction.text.toUpperCase() == text.toUpperCase()) {\n          textExist = true;\n        }\n      });\n    }\n\n    return textExist;\n  }\n\n  const onSubmit = e => {\n    e.preventDefault(); // if (!text) {\n    //     return alert.error(Message.text_empty);\n    // }\n    // if (amount == 0) {\n    //     return alert.error(Message.amount_zero);\n    // }\n    // if (!isTextExist(transactions)) {\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount\n    };\n    addTransaction(newTransaction); // } else {\n    //     alert.error(Message.text_exist);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter text...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: [\"Amount \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 48\n          }, this), \"(negative - expense, positive - income)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          placeholder: \"Enter amount...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTransaction, \"LrFgB+Py4PJrHlqzd6ckmx4yemQ=\", false, function () {\n  return [useAlert];\n});\n\n_c = AddTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"sources":["/home/sun-asterisk/Projects/Jan-June (2021)/expense-tracker-react/client/src/components/AddTransaction.js"],"names":["React","useState","useContext","useAlert","GlobalContext","Message","AddTransaction","alert","addTransaction","transactions","text","setText","amount","setAmount","isTextExist","textExist","length","map","transaction","toUpperCase","onSubmit","e","preventDefault","newTransaction","id","Math","floor","random","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAChC,QAAMC,KAAK,GAAGJ,QAAQ,EAAtB;AAEA,QAAM;AAAEK,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAmCP,UAAU,CAACE,aAAD,CAAnD;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CAAD,CAApC;;AAEA,WAASa,WAAT,CAAqBL,YAArB,EAAmC;AAC/B,QAAIM,SAAS,GAAG,KAAhB;;AAEA,QAAIN,YAAY,CAACO,MAAb,GAAsB,CAA1B,EAA6B;AACzBP,MAAAA,YAAY,CAACQ,GAAb,CAAiBC,WAAW,IAAI;AAC5B,YAAIA,WAAW,CAACR,IAAZ,CAAiBS,WAAjB,MAAkCT,IAAI,CAACS,WAAL,EAAtC,EAA0D;AACtDJ,UAAAA,SAAS,GAAG,IAAZ;AACH;AACJ,OAJD;AAKH;;AAED,WAAOA,SAAP;AACH;;AAED,QAAMK,QAAQ,GAAGC,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACC,cAAF,GADkB,CAGlB;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACI,UAAMC,cAAc,GAAG;AACnBC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,SAA3B,CADe;AAEnBjB,MAAAA,IAFmB;AAGnBE,MAAAA,MAAM,EAAE,CAACA;AAHU,KAAvB;AAMAJ,IAAAA,cAAc,CAACe,cAAD,CAAd,CAlBc,CAmBlB;AACA;AACA;AACH,GAtBD;;AAwBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEH,QAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACA;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEV,IAA1B;AAAgC,UAAA,QAAQ,EAAGW,CAAD,IAAOV,OAAO,CAACU,CAAC,CAACO,MAAF,CAASC,KAAV,CAAxD;AAA0E,UAAA,WAAW,EAAC;AAAtF;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACA;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA,6CAA+B;AAAA;AAAA;AAAA;AAAA,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAEjB,MAA5B;AAAoC,UAAA,QAAQ,EAAGS,CAAD,IAAOR,SAAS,CAACQ,CAAC,CAACO,MAAF,CAASC,KAAV,CAA9D;AAAgF,UAAA,WAAW,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA9DM;;GAAMvB,c;UACKH,Q;;;KADLG,c","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useAlert } from 'react-alert';\nimport { GlobalContext } from '../context/GlobalState';\nimport { Message } from '../Message';\n\nexport const AddTransaction = () => {\n    const alert = useAlert();\n\n    const { addTransaction, transactions } = useContext(GlobalContext);\n\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n\n    function isTextExist(transactions) {\n        let textExist = false;\n\n        if (transactions.length > 0) {\n            transactions.map(transaction => {\n                if (transaction.text.toUpperCase() == text.toUpperCase()) {\n                    textExist = true;\n                }\n            });\n        }\n\n        return textExist;\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // if (!text) {\n        //     return alert.error(Message.text_empty);\n        // }\n        \n        // if (amount == 0) {\n        //     return alert.error(Message.amount_zero);\n        // }\n\n        // if (!isTextExist(transactions)) {\n            const newTransaction = {\n                id: Math.floor(Math.random() * 100000000),\n                text,\n                amount: +amount\n            }\n    \n            addTransaction(newTransaction);\n        // } else {\n        //     alert.error(Message.text_exist);\n        // }\n    }\n\n    return (\n        <div>\n            <h3>Add new transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                <label htmlFor=\"text\">Text</label>\n                <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\n                </div>\n                <div className=\"form-control\">\n                <label htmlFor=\"amount\">Amount <br />(negative - expense, positive - income)</label>\n                <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\n                </div>\n                <button className=\"btn\">Add transaction</button>\n            </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}